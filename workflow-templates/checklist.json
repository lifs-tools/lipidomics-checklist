{"pages": [{"title": "Overall study design", "content": [{"label": "Title of the study", "name": "145", "type": "text", "required": 1, "value": "", "description": ""}, {"label": "Principle investigator", "name": "196", "type": "text", "required": 1, "value": "", "description": "Please specify the person / laboratory responsible for the data acquisition."}, {"label": "Institution", "name": "197", "type": "text", "required": 1, "value": "", "description": "Please specify the institution where the data was acquired."}, {"label": "Corresponding Email", "name": "200", "type": "text", "required": 1, "value": "", "description": "To whom correspondence should be addressed?"}, {"name": "156", "type": "hidden", "value": "di"}, {"label": "Is the workflow targeted or untargeted?", "name": "3", "type": "select", "required": 0, "choice": [{"name": "3-1", "label": "Targeted", "value": 1}, {"name": "3-2", "label": "Untargeted", "value": 0}], "description": ""}, {"label": "Clinical", "name": "6", "type": "select", "required": 0, "choice": [{"name": "6-1", "label": "Yes", "value": 1}, {"name": "6-2", "label": "No", "value": 0}], "description": "Is it clinical lipidomics, i.e. samples were analyzed related to a clinical question using a quantitative, validated method?"}]}, {"title": "Preanalytics / Sample Material", "content": [{"name": "148", "type": "html", "code": "<label class=\"wpforms-field-label\">Sample types</label>\r\n<div id=\"grey_background\" style=\"top: 0px; left: 0px; width: 100%; height: 100%; position: fixed; z-index: 110; background-color: rgba(0, 0, 0, 0.4); display: none;\"></div>\r\n<div id=\"sample_selector_wrapper\" style=\"top: 0px; left: 0px; width: 100%; height: 100%; position: fixed; z-index: 120; display: none;\">\r\n    <div id=\"sample_selector_wrapper\" style=\"top: 15%; left: 25%; width: 50%; height: 70%; position: fixed; background: white; border-radius: 5px;\">\r\n        <div id=\"control-buttons-sample\" style=\"width: 100%; height: 100%; position: relative;\">\r\n            <table style=\"width: 100%; height: 100%; border: 1px solid black;\" cellpadding=\"10px\" id=\"table_wrapper\">\r\n                <tr><td style=\"width: 100%;\"><b style=\"font-size: 20px;\">Registered sample types to workflows</b></td></tr>\r\n                <tr><td style=\"width: 100%; height: 80%;\" valign=\"top\" align=\"center\">\r\n                    <div id=\"sample_forms_table\" style=\"overflow-y: auto;\"></div>\r\n                </td></tr>\r\n                <tr><td align=\"right\" valign=\"bottom\">\r\n                    <div style=\"padding: 10px 15px; font-size: 1em; color: #333; font-family: Arial; background-color: #eee; cursor: pointer; display: inline; border: 1px solid #ddd; border-radius: 3px;\" onmouseover=\"this.style.backgroundColor = '#ddd';\" onmouseleave=\"this.style.backgroundColor = '#eee';\" onclick=\"select_sample_selector();\">Select</div>&nbsp;&nbsp;\r\n                    <div style=\"padding: 10px 15px; font-size: 1em; color: #333; font-family: Arial; background-color: #eee; cursor: pointer; display: inline; border: 1px solid #ddd; border-radius: 3px;\" onmouseover=\"this.style.backgroundColor = '#ddd';\" onmouseleave=\"this.style.backgroundColor = '#eee';\" onclick=\"close_sample_selector();\">Cancel</div>\r\n                </td></tr>\r\n            </table>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div style=\"display: inline-block;\">\r\n    <div id=\"new_sample_form\" style=\"cursor: pointer; color: #0000ff; display: inline-block;\" onclick=\"register_new_sample_form(update_interval_sample);\">Add sample type</div>&nbsp;&nbsp;/&nbsp;&nbsp;\r\n    <div id=\"new_sample_form\" style=\"cursor: pointer; color: #0000ff; display: inline-block;\" onclick=\"show_sample_selector(update_interval_sample);\">Load registered sample</div>\r\n</div>\r\n<div id=\"result_box_samples\"></div>\r\n"}]}, {"title": "Lipid extraction", "content": [{"label": "Extraction method", "name": "38", "type": "select", "required": 0, "choice": [{"name": "38-1", "label": "1-phase system", "value": 1}, {"name": "38-2", "label": "2-phase system", "value": 0}, {"name": "38-3", "label": "Solid-Phase Extraction", "value": 0}, {"name": "38-4", "label": "Other", "value": 0}], "description": "Which type of lipid extraction was applied?", "condition": "156!='img'"}, {"label": "Other extraction method", "name": "39", "type": "text", "required": 1, "value": "", "description": "Which other extraction method was applied?", "condition": "38-4=1"}, {"label": "pH adjustment", "name": "40", "type": "select", "required": 0, "choice": [{"name": "40-1", "label": "None", "value": 1}, {"name": "40-2", "label": "Hydrochloric acid", "value": 0}, {"name": "40-3", "label": "Citrate", "value": 0}, {"name": "40-4", "label": "Ammonium formate", "value": 0}], "description": "Was the pH adjusted for extraction? If yes, which buffer, acid/base was added?", "condition": "156!='img'"}, {"label": "1-phase system", "name": "42", "type": "select", "required": 0, "choice": [{"name": "42-1", "label": "Acetonitrile", "value": 1}, {"name": "42-2", "label": "Isopropanol", "value": 0}, {"name": "42-3", "label": "Methanol", "value": 0}, {"name": "42-5", "label": "Ethanol", "value": 0}, {"name": "42-7", "label": "Butanol", "value": 0}, {"name": "42-6", "label": "Butanol/Methanol (1/1)", "value": 0}, {"name": "42-9", "label": "Butanol/Methanol (3/1)", "value": 0}, {"name": "42-4", "label": "Other", "value": 0}], "description": "Type of 1-phase, i.e. organic solvent used for protein precipitation.", "condition": "38-1=1"}, {"label": "Other 1-phase system", "name": "157", "type": "text", "required": 1, "value": "", "description": "Which other type 1-phase was used for protein precipitation?", "condition": "42-4=1"}, {"label": "2-phase system", "name": "43", "type": "select", "required": 0, "choice": [{"name": "43-1", "label": "Folch", "value": 1}, {"name": "43-2", "label": "Bligh&Dyer", "value": 0}, {"name": "43-3", "label": "MTBE", "value": 0}, {"name": "43-5", "label": "BUME", "value": 0}, {"name": "43-4", "label": "2-step extraction", "value": 0}, {"name": "43-6", "label": "Other", "value": 0}], "description": "Type of 2-phase; for other include reference when available.", "condition": "38-2=1"}, {"label": "Other 2-phase system", "name": "159", "type": "text", "required": 1, "value": "", "description": "Which other type 2-phase was used?", "condition": "43-6=1"}, {"label": "Solid-Phase Extraction", "name": "41", "type": "select", "required": 0, "choice": [{"name": "41-1", "label": "Reverse-Phase", "value": 1}, {"name": "41-2", "label": "Normal-Phase", "value": 0}, {"name": "41-3", "label": "Ion Exchange", "value": 0}, {"name": "41-5", "label": "Mixed Mode", "value": 0}, {"name": "41-4", "label": "Other", "value": 0}], "description": "Separation mode applied for SPE.", "condition": "38-3=1"}, {"label": "Other Solid-Phase Extraction", "name": "195", "type": "text", "required": 1, "value": "", "description": "Which other solid-phase extraction was applied?", "condition": "41-4=1"}, {"label": "Were internal standards added prior extraction?", "name": "44", "type": "select", "required": 0, "choice": [{"name": "44-1", "label": "Yes", "value": 1}, {"name": "44-2", "label": "No", "value": 0}], "description": ""}]}, {"title": "Analytical platform", "content": [{"label": "Number of separation dimensions", "name": "163", "type": "select", "required": 0, "choice": [{"name": "163-1", "label": "One dimension", "value": 0}, {"name": "163-2", "label": "Two dimensions", "value": 0}, {"name": "163-3", "label": "Three dimensions", "value": 0}], "description": "How many dimensions were applied?", "condition": "156='sep'"}, {"label": "Separation Type 1", "name": "164", "type": "select", "required": 0, "choice": [{"name": "164-1", "label": "GC", "value": 0}, {"name": "164-2", "label": "LC", "value": 1}, {"name": "164-3", "label": "SFC", "value": 0}, {"name": "164-4", "label": "TLC", "value": 0}], "description": "Which type of separation was applied?", "condition": "156='sep'"}, {"label": "Separation Mode 1", "name": "165", "type": "select", "required": 0, "choice": [{"name": "165-1", "label": "NP", "value": 0}, {"name": "165-2", "label": "HILIC", "value": 0}, {"name": "165-3", "label": "RP", "value": 0}], "description": "Which separation mode was applied?", "condition": "156='sep'"}, {"label": "Separation window (1) for lipid analyte selection (\u00b1) in minutes", "name": "166", "type": "number", "required": 1, "value": 0, "description": "", "min": 0.0, "condition": "156='sep'"}, {"label": "Separation Type 2", "name": "167", "type": "select", "required": 0, "choice": [{"name": "167-1", "label": "GC", "value": 0}, {"name": "167-2", "label": "LC", "value": 0}, {"name": "167-3", "label": "SFC", "value": 0}, {"name": "167-4", "label": "TLC", "value": 0}], "description": "Which type of separation was applied?", "condition": "163-2=1|163-3=1"}, {"label": "Separation Mode 2", "name": "168", "type": "select", "required": 0, "choice": [{"name": "168-1", "label": "NP", "value": 0}, {"name": "168-2", "label": "HILIC", "value": 0}, {"name": "168-3", "label": "RP", "value": 0}], "description": "Which separation mode was applied?", "condition": "163-2=1|163-3=1"}, {"label": "Separation window (2) for lipid analyte selection (\u00b1) in minutes", "name": "169", "type": "number", "required": 1, "value": 0, "description": "", "min": 0.0, "condition": "163-2=1|163-3=1"}, {"label": "Separation Type 3", "name": "170", "type": "select", "required": 0, "choice": [{"name": "170-1", "label": "GC", "value": 0}, {"name": "170-2", "label": "LC", "value": 0}, {"name": "170-3", "label": "SFC", "value": 0}, {"name": "170-4", "label": "TLC", "value": 0}], "description": "Which type of separation was applied?", "condition": "163-3=1"}, {"label": "Separation Mode 3", "name": "171", "type": "select", "required": 0, "choice": [{"name": "171-1", "label": "NP", "value": 0}, {"name": "171-2", "label": "HILIC", "value": 0}, {"name": "171-3", "label": "RP", "value": 0}], "description": "Which separation mode was applied?", "condition": "163-3=1"}, {"label": "Separation window (3) for lipid analyte selection (\u00b1) in minutes", "name": "172", "type": "number", "required": 1, "value": 0, "description": "", "min": 0.0, "condition": "163-3=1"}, {"label": "RT verified by standard", "name": "173", "type": "select", "required": 0, "choice": [{"name": "173-1", "label": "Yes", "value": 0}, {"name": "173-2", "label": "No", "value": 0}], "description": "Were standards used to check retention time of lipid class(species)?", "condition": "156='sep'"}, {"label": "CCS verified by standard", "name": "174", "type": "select", "required": 0, "choice": [{"name": "174-1", "label": "Yes", "value": 0}, {"name": "174-2", "label": "No", "value": 0}], "description": "Were standards used to check CCS values?", "condition": "156='sep'"}, {"label": "Separation of isobaric/isomeric interferece confirmed", "name": "175", "type": "select", "required": 0, "choice": [{"name": "175-1", "label": "Yes", "value": 0}, {"name": "175-2", "label": "No", "value": 0}], "description": "Was separation of isobaric/isomeric interferece confirmed by primary standards?", "condition": "156='sep'"}, {"label": "Model for separation prediction", "name": "176", "type": "select", "required": 0, "choice": [{"name": "176-1", "label": "Yes", "value": 0}, {"name": "176-2", "label": "No", "value": 0}], "description": "Was a a model used to predict lipid molecule separation?", "condition": "156='sep'"}, {"label": "MS type", "name": "160", "type": "select", "required": 0, "choice": [{"name": "160-6", "label": "Q", "value": 0}, {"name": "160-7", "label": "TOF", "value": 0}, {"name": "160-8", "label": "QQQ", "value": 0}, {"name": "160-9", "label": "QTrap", "value": 0}, {"name": "160-10", "label": "FTICR", "value": 0}, {"name": "160-3", "label": "Orbitrap", "value": 0}, {"name": "160-2", "label": "QTOF", "value": 0}, {"name": "160-11", "label": "FTICR", "value": 0}, {"name": "160-4", "label": "ICR", "value": 0}, {"name": "160-5", "label": "Other", "value": 0}], "description": ""}, {"label": "Other MS type", "name": "60", "type": "text", "required": 1, "value": "", "description": "Specify another MS type.", "condition": "160-5=1"}, {"label": "MS vendor", "name": "161", "type": "select", "required": 0, "choice": [{"name": "161-1", "label": "Agilent", "value": 0}, {"name": "161-2", "label": "Bruker", "value": 0}, {"name": "161-3", "label": "SCIEX", "value": 0}, {"name": "161-6", "label": "Shimadzu", "value": 0}, {"name": "161-5", "label": "Thermo", "value": 0}, {"name": "161-4", "label": "Waters", "value": 0}, {"name": "161-7", "label": "Other", "value": 0}], "description": "Vendor of mass spectrometer."}, {"label": "Other MS vendor", "name": "62", "type": "text", "required": 1, "value": "", "description": "Specify another MS vendor.", "condition": "161-7=1"}, {"label": "Ion source", "name": "162", "type": "select", "required": 0, "choice": [{"name": "162-1", "label": "ESI", "value": 0}, {"name": "162-2", "label": "APCI", "value": 0}, {"name": "162-3", "label": "APPI", "value": 0}, {"name": "162-4", "label": "MALDI", "value": 0}, {"name": "162-5", "label": "Other", "value": 0}], "description": "Which ion source was applied?"}, {"label": "Other ion source", "name": "64", "type": "text", "required": 1, "value": "", "description": "Specify another ion source.", "condition": "162-5=1"}, {"label": "Imaging ion source", "name": "49", "type": "select", "required": 0, "choice": [{"name": "49-1", "label": "MALDI", "value": 0}, {"name": "49-2", "label": "DESI", "value": 0}, {"name": "49-3", "label": "Other", "value": 0}], "description": "Which ion source was applied?", "condition": "156='img'"}, {"label": "Other imaging ion source", "name": "57", "type": "text", "required": 1, "value": "", "description": "Specify another imaging ion source.", "condition": "49-3=1"}, {"label": "Direct type", "name": "193", "type": "select", "required": 0, "choice": [{"name": "193-1", "label": "Syringe", "value": 0}, {"name": "193-2", "label": "FIA", "value": 0}, {"name": "193-3", "label": "Chip", "value": 0}], "description": "Which inlet was used for direct MS?", "condition": "156='di'"}, {"label": "MS Level", "name": "177", "type": "multiple", "required": 1, "choice": [{"name": "177-1", "label": "MS1", "value": 0}, {"name": "177-3", "label": "MS2", "value": 0}, {"name": "177-2", "label": "MSn", "value": 0}], "description": "Which MS level(s) was(were) used for identification?"}, {"label": "Mass resolution for detected ion at MS1", "name": "181", "type": "select", "required": 0, "choice": [{"name": "181-1", "label": "Low resolution", "value": 0}, {"name": "181-2", "label": "High resolution", "value": 0}], "description": "Which mass resolution was applied for the detected ion?", "condition": "177-1=1"}, {"label": "Resolution in Da at MS1", "name": "182", "type": "number", "required": 1, "value": 0, "description": "Specify the total window size in Da.", "min": 0.0, "condition": "177-1=1&181-1=1"}, {"label": "Resolution at m/z 200 at MS1", "name": "209", "type": "number", "required": 1, "value": 0, "description": "Specify the resolution at m/z 200 FWHM.", "min": 0.0, "condition": "177-1=1&181-2=1"}, {"label": "Mass accuracy in ppm at MS1", "name": "184", "type": "number", "required": 1, "value": 0, "description": "", "condition": "177-1=1&181-2=1"}, {"label": "Mass window for precursor ion isolation (in  Da total isolation window)", "name": "186", "type": "number", "required": 1, "value": 0, "description": "For MS2 and higher - which mass window was applied for precursor selection?", "min": 0.0, "condition": "177-2=1|177-3=1"}, {"label": "Mass resolution for detected ion at MS2", "name": "202", "type": "select", "required": 0, "choice": [{"name": "202-1", "label": "Low resolution", "value": 0}, {"name": "202-2", "label": "High resolution", "value": 0}], "description": "Which mass resolution was applied for the detected ion?", "condition": "177-3=1"}, {"label": "Resolution in Da at MS2", "name": "203", "type": "number", "required": 1, "value": 0, "description": "Specify the total window size in Da.", "min": 0.0, "condition": "177-3=1&202-1=1"}, {"label": "Resolution at m/z 200 at MS2", "name": "208", "type": "number", "required": 1, "value": 0, "description": "Specify the resolution at m/z 200 FWHM.", "min": 0.0, "condition": "177-3=1&202-2=1"}, {"label": "Mass accuracy in ppm at MS2", "name": "206", "type": "number", "required": 1, "value": 0, "description": "", "condition": "177-3=1&202-2=1"}, {"label": "Mass resolution for detected ion at MSn", "name": "187", "type": "select", "required": 0, "choice": [{"name": "187-1", "label": "Low resolution", "value": 0}, {"name": "187-2", "label": "High resolution", "value": 0}], "description": "Which mass resolution was applied for the detected ion?", "condition": "177-2=1"}, {"label": "Resolution in Da at MSn", "name": "188", "type": "number", "required": 1, "value": 0, "description": "Specify the total window size in Da.", "min": 0.0, "condition": "177-2=1&187-1=1"}, {"label": "Resolution at m/z 200 at MSn", "name": "189", "type": "number", "required": 1, "value": 0, "description": "Specify the resolution at m/z 200 FWHM.", "min": 0.0, "condition": "177-2=1&187-2=1"}, {"label": "Mass accuracy in ppm at MSn", "name": "192", "type": "number", "required": 1, "value": 0, "description": "", "min": 0.0, "condition": "177-2=1&187-2=1"}, {"label": "Additional dimension/techniques", "name": "178", "type": "multiple", "required": 0, "choice": [{"name": "178-1", "label": "IMS", "value": 0}, {"name": "178-2", "label": "OzID", "value": 0}, {"name": "178-3", "label": "UV-PD", "value": 0}, {"name": "178-4", "label": "Paterno-B\u00fcchi", "value": 0}, {"name": "178-5", "label": "Other", "value": 0}], "description": "Were additional analytical dimensions applied?"}, {"label": "Other additional dimension/techniques", "name": "180", "type": "text", "required": 1, "value": "", "description": "Which other additional dimension/technique was used?", "condition": "178-5=1"}]}, {"title": "Lipid identification / Additional separation method(s) / Additional analytical dimension / Lipid Quantification", "content": [{"name": "149", "type": "html", "code": "<label class=\"wpforms-field-label\">Lipid Classes</label>\r\n<div id=\"grey_background\" style=\"top: 0px; left: 0px; width: 100%; height: 100%; position: fixed; z-index: 110; background-color: rgba(0, 0, 0, 0.4); display: none;\"></div>\r\n    <div id=\"class_selector_wrapper\" style=\"top: 0px; left: 0px; width: 100%; height: 100%; position: fixed; z-index: 120; display: none;\">\r\n        <div id=\"class_selector_wrapper\" style=\"top: 15%; left: 25%; width: 50%; height: 70%; position: fixed; background: white; border-radius: 5px;\">\r\n            <div id=\"control-buttons\" style=\"width: 100%; height: 100%; position: relative;\">\r\n                <table style=\"width: 100%; height: 100%; border: 1px solid black;\" cellpadding=\"10px\" id=\"table_wrapper\">\r\n                    <tr><td style=\"width: 100%;\"><b style=\"font-size: 20px;\">Registered Lipid classes to workflows</b></td></tr>\r\n                    <tr><td style=\"width: 100%; height: 80%;\" valign=\"top\" align=\"center\">\r\n                        <div id=\"class_forms_table\" style=\"overflow-y: auto;\"></div>\r\n                    </td></tr>\r\n                    <tr><td align=\"right\" valign=\"bottom\">\r\n                        <div style=\"padding: 10px 15px; font-size: 1em; color: #333; font-family: Arial; background-color: #eee; cursor: pointer; display: inline; border: 1px solid #ddd; border-radius: 3px;\" onmouseover=\"this.style.backgroundColor = '#ddd';\" onmouseleave=\"this.style.backgroundColor = '#eee';\" onclick=\"select_class_selector();\">Select</div>&nbsp;&nbsp;\r\n                        <div style=\"padding: 10px 15px; font-size: 1em; color: #333; font-family: Arial; background-color: #eee; cursor: pointer; display: inline; border: 1px solid #ddd; border-radius: 3px;\" onmouseover=\"this.style.backgroundColor = '#ddd';\" onmouseleave=\"this.style.backgroundColor = '#eee';\" onclick=\"close_class_selector();\">Cancel</div>\r\n                    </td></tr>\r\n                </table>\r\n            </div>\r\n        </div>\r\n    </div>\r\n<div style=\"display: inline-block;\">\r\n    <div id=\"new_class_form\" style=\"cursor: pointer; color: #0000ff; display: inline-block;\" onclick=\"register_new_class_form(update_interval);\">Add lipid class</div>&nbsp;&nbsp;/&nbsp;&nbsp;\r\n    <div id=\"new_class_form\" style=\"cursor: pointer; color: #0000ff; display: inline-block;\" onclick=\"show_class_selector(update_interval);\">Load registered lipid classes</div>\r\n</div>\r\n<div id=\"result_box\"></div>\r\n<script language=\"javascript\">\r\nvar has_partial = false;\r\n\r\nwindow.addEventListener('resize', function(event) {\r\n    document.getElementById(\"class_forms_table\").style.height = String(document.getElementById(\"control-buttons\").clientHeight * 0.75) + \"px\";\r\n}, true);\r\n\r\n\r\nfunction show_class_selector(update_interval){\r\n    update_load_class_forms(update_interval);\r\n    document.getElementById(\"grey_background\").style.display = \"block\";\r\n    document.getElementById(\"class_selector_wrapper\").style.display = \"block\";\r\n    document.getElementById(\"class_forms_table\").style.height = String(document.getElementById(\"control-buttons\").clientHeight * 0.75) + \"px\";\r\n}\r\n\r\n\r\nfunction get_entry(){\r\n    var dom = document.getElementsByClassName(\"wpforms-validate wpforms-form wpforms-ajax-form\")[0];\r\n    return dom[\"action\"].split(\"wpforms_resume_entry=\")[1];\r\n}\r\n\r\n\r\nfunction update_load_class_forms(update_interval){\r\n    var entry_id = -1;\r\n    \r\n    try {\r\n        entry_id = get_entry();\r\n    }\r\n    catch (e){\r\n        console.log(\"Error: \" + e);\r\n        clearInterval(update_interval);\r\n        return;\r\n    }\r\n    \r\n    if (entry_id == undefined || entry_id.length == 0) return;\r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    \r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            has_partial = false;\r\n            response_text = xmlhttp_request.responseText;\r\n            var innerHTML = \"\";\r\n            var post = 1;\r\n            if (response_text.length > 0){\r\n                if (response_text.startsWith(\"ErrorCodes\")){\r\n                    console.log(\"Error\");\r\n                    clearInterval(update_interval);\r\n                }\r\n                else {\r\n                    var response = JSON.parse(response_text);\r\n                    innerHTML += \"<table cellspacing='0' cellpadding='10' style='width: 100%'>\";\r\n                    innerHTML += \"<tr><th style='border-bottom: 3px solid black;'>&nbsp;</th>\";\r\n                    innerHTML += \"<th style='border-bottom: 3px solid black;'>Workflow title</th>\";\r\n                    innerHTML += \"<th style='border-bottom: 3px solid black;'>Lipid class</th>\";\r\n                    innerHTML += \"<th style='border-bottom: 3px solid black;'>Modification date</th>\";\r\n                    innerHTML += \"<th style='border-bottom: 3px solid black;'>Selection</th></tr>\";\r\n                    \r\n                    response.sort(function(a, b){\r\n                        if (a[\"main_title\"] == b[\"main_title\"]) return a[\"title\"] > b[\"title\"];\r\n                         return a[\"main_title\"] > b[\"main_title\"];\r\n                    });\r\n                    \r\n                    for (var i = 0; i < response.length; ++i){\r\n                        var row = response[i];\r\n                        if (!(\"link\" in row) || !(\"title\" in row) || !(\"status\" in row)){\r\n                            echo(\"Error\");\r\n                            return;\r\n                        }\r\n                        \r\n                        var date_mod = new Date(row[\"date_modified\"] * 1000);\r\n                        innerHTML += \"<tr><td>\" + String(post++) + \") </td>\";\r\n                        innerHTML += \"<td>\" + row[\"main_title\"] + \"</td><td>\" + row[\"title\"] + \"</td><td>\" + date_mod.toUTCString() + \"</td>\";\r\n                        innerHTML += \"<td><input type='checkbox' id='\" + row[\"enc_entry\"] + \"' class='check_class'></input></td>\";\r\n                        innerHTML += \"</tr>\";\r\n                    }\r\n                    \r\n                    \r\n                    innerHTML += \"</table>\";\r\n                }\r\n            }\r\n            document.getElementById(\"class_forms_table\").innerHTML = innerHTML;\r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=get_all_class_forms&main_entry_id=\" + entry_id;\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n\r\n\r\nfunction select_class_selector(){\r\n    close_class_selector();\r\n    var entry_id = -1;\r\n    \r\n    try {\r\n        entry_id = get_entry();\r\n    }\r\n    catch (e){\r\n        console.log(\"Error: \" + e);\r\n        clearInterval(update_interval);\r\n        return;\r\n    }\r\n    \r\n    if (entry_id == undefined || entry_id.length == 0) return;\r\n    \r\n    var checked_entries = document.getElementsByClassName(\"check_class\");\r\n    var class_entry_ids = [];\r\n    for (var i = 0; i < checked_entries.length; ++i){\r\n        var dom = checked_entries[i];\r\n        if (dom.checked){\r\n            class_entry_ids.push(dom.id);\r\n        }\r\n    }\r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            has_partial = false;\r\n            response_text = xmlhttp_request.responseText;\r\n            if (response_text.length > 0){\r\n                if (response_text.startsWith(\"ErrorCodes\")){\r\n                    console.log(\"Error\");\r\n                    clearInterval(update_interval);\r\n                }\r\n                else {\r\n                    update_class_forms(update_interval);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=import_class_forms&entry_id=\" + entry_id + \"&class_entry_ids=\" + class_entry_ids.join(\"|\");\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n\r\n\r\nfunction close_class_selector(){\r\n    document.getElementById(\"grey_background\").style.display = \"none\";\r\n    document.getElementById(\"class_selector_wrapper\").style.display = \"none\";\r\n}\r\n\r\n\r\nfunction update_class_forms() {\r\n    var entry_id = -1;\r\n    \r\n    try {\r\n        entry_id = get_entry();\r\n    }\r\n    catch (e){\r\n        console.log(\"Error: \" + e);\r\n        clearInterval(update_interval);\r\n        return;\r\n    }\r\n    \r\n    if (entry_id == undefined || entry_id.length == 0) return;\r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    \r\n    \r\n    \r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            response_text = xmlhttp_request.responseText;\r\n            var innerHTML = \"\";\r\n            var post = 1;\r\n            \r\n            if (response_text.length > 0){\r\n                \r\n                if (response_text.startsWith(\"ErrorCodes\")){\r\n                    clearInterval(update_interval);\r\n                }\r\n                else {\r\n                    has_partial = false;\r\n                    var response = JSON.parse(response_text);\r\n                    innerHTML += \"<table cellspacing='0' cellpadding='10' style='width: 100%'>\";\r\n                    innerHTML += \"<tr><th style='width: 5%;'>&nbsp;</th>\";\r\n                    innerHTML += \"<th style='width: 20%;'>Lipid Class</th>\";\r\n                    innerHTML += \"<th style='width: 10%;'>Status</th>\";\r\n                    innerHTML += \"<th style='width: 10%;'>Action</th>\";\r\n                    innerHTML += \"<th style='width: 5%;'>&nbsp;</th></tr>\";\r\n                    \r\n                    response.sort(function(a, b){\r\n                        return b[\"date_modified\"] - a[\"date_modified\"];\r\n                    });\r\n                    for (var i = 0; i < response.length; ++i){\r\n                        var row = response[i];\r\n                        if (!(\"link\" in row) || !(\"title\" in row) || !(\"status\" in row)){\r\n                            echo(\"Error\");\r\n                            return;\r\n                        }\r\n                        \r\n                        var date_mod = new Date(row[\"date_modified\"] * 1000);\r\n                        innerHTML += \"<tr><td>\" + String(post++) + \") </td>\";\r\n                        innerHTML += \"<td>\" + row[\"title\"] + \"</td><td>\" + row[\"status\"] + \"</td>\";\r\n                        if (row[\"status\"] == \"partial\"){\r\n                            has_partial = true;\r\n                            innerHTML += \"<td><a href='\" + row[\"link\"] + \"' target='_blank'>Continue</a></td>\";\r\n                        }\r\n                        else {\r\n                            innerHTML += \"<td alt='Copy lipid class form'><a style='display: inline; cursor: pointer;' onclick='copy_class_form(\" + update_interval + \", \" + '\"' + row[\"enc_entry\"] + '\"' + \");' />Copy form</a></td>\";\r\n                        }\r\n                        innerHTML += \"<td align='center' alt='Delete lipid class'><img src='/lipidomics-report/trashbin.png' style='cursor: pointer; height: 18px;' onclick='delete_class_form(\" + update_interval + \", \" + '\"' + row[\"title\"] + '\"' + \", \" + '\"' + row[\"enc_entry\"] + '\"' + \");' /></td>\";\r\n                        innerHTML += \"</tr>\";\r\n                    }\r\n\r\n                    innerHTML += \"</table>\";\r\n                }\r\n            }\r\n            try {\r\n                document.getElementById(\"result_box\").innerHTML = innerHTML;\r\n                document.getElementsByName(\"wpforms[submit]\")[0].disabled = has_partial | has_partial_sample;\r\n            }\r\n            catch (e){\r\n            }\r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=get_class_forms&main_entry_id=\" + entry_id;\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n\r\n\r\nfunction delete_class_form(update_interval, lipid_class, entry_id){\r\n    if (!confirm(\"Do you really want to delete '\" + lipid_class + \"' class?\")) return;\r\n    \r\n    if (entry_id == undefined || entry_id.length == 0) return;\r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    \r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            response_text = xmlhttp_request.responseText;\r\n            if (response_text.length > 0){\r\n                if (!response_text.startsWith(\"ErrorCodes\")){\r\n                    update_class_forms(update_interval);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=delete_class_form&entry_id=\" + entry_id;\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n\r\nvar update_interval = 0;\r\nasync function start_interval(update_interval){\r\n    await new Promise(resolve => setTimeout(resolve, 100));\r\n    update_interval = setInterval(update_class_forms, 3000);\r\n    update_class_forms(update_interval);\r\n}\r\nstart_interval(update_interval);\r\n\r\n\r\n\r\n\r\nfunction copy_class_form(update_interval, entry_id){\r\n    if (typeof(has_partial) != undefined && has_partial) {\r\n        window.alert(\"Only one partial lipid class can be open at the same time.\");\r\n        return;\r\n    }\r\n    \r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            response_text = xmlhttp_request.responseText;\r\n            if (response_text.length > 0 && !response_text.startsWith(\"ErrorCodes\")){\r\n                update_class_forms(update_interval);\r\n            }\r\n            \r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=copy_class_form&entry_id=\" + entry_id;\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n\r\n\r\n\r\n\r\nfunction register_new_class_form(update_interval){\r\n    if (typeof(has_partial) != undefined && has_partial) {\r\n        window.alert(\"Only one partial lipid class can be open at the same time.\");\r\n        return;\r\n    }\r\n    var entry_id = -1;\r\n    \r\n    try {\r\n        entry_id = get_entry();\r\n    }\r\n    catch (e){\r\n        console.log(\"Error: \" + e);\r\n        clearInterval(update_interval);\r\n        return;\r\n    }\r\n    \r\n    if (entry_id == undefined || entry_id.length == 0) return;\r\n    var xmlhttp_request = new XMLHttpRequest();\r\n    \r\n    xmlhttp_request.onreadystatechange = function() {\r\n        if (xmlhttp_request.readyState == 4 && xmlhttp_request.status == 200) {\r\n            response_text = xmlhttp_request.responseText;\r\n            if (response_text.length > 0){\r\n                if (!response_text.startsWith(\"ErrorCodes\")){\r\n                    update_class_forms(update_interval);\r\n                }\r\n            }\r\n            \r\n        }\r\n    }\r\n    var request_url = \"/lipidomics-report/connector.php?command=add_class_form&main_entry_id=\" + entry_id;\r\n    xmlhttp_request.open(\"GET\", request_url);\r\n    xmlhttp_request.send();\r\n}\r\n</script>\r\n"}]}, {"title": "Quality control", "content": [{"label": "Blanks", "name": "129", "type": "select", "required": 0, "choice": [{"name": "129-1", "label": "Yes", "value": 0}, {"name": "129-2", "label": "No", "value": 1}], "description": "Where blank samples analyzed?"}, {"label": "Type of Blanks", "name": "194", "type": "multiple", "required": 1, "choice": [{"name": "194-1", "label": "Extraction blank", "value": 0}, {"name": "194-2", "label": "Injection blank", "value": 0}], "description": "Which types of blank samples were analyzed?", "condition": "129-1=1"}, {"label": "Quality control", "name": "131", "type": "select", "required": 0, "choice": [{"name": "131-1", "label": "Yes", "value": 0}, {"name": "131-2", "label": "No", "value": 1}], "description": "Were QC samples analyzed?"}, {"label": "Type of QC sample", "name": "132", "type": "multiple", "required": 1, "choice": [{"name": "132-2", "label": "Commercial sample", "value": 0}, {"name": "132-3", "label": "Sample pool", "value": 0}, {"name": "132-4", "label": "Reference material", "value": 0}], "description": "Which types of QC samples were analyzed?", "condition": "131-1=1"}]}, {"title": "Method qualification and validation", "content": [{"label": "Method validation", "name": "207", "type": "select", "required": 0, "choice": [{"name": "207-1", "label": "Yes", "value": 0}, {"name": "207-2", "label": "No", "value": 1}], "description": "Was any method validation performed?"}, {"label": "Lipid recovery", "name": "201", "type": "select", "required": 0, "choice": [{"name": "201-1", "label": "Yes", "value": 0}, {"name": "201-2", "label": "No", "value": 1}], "description": "Was the recovery of lipid extraction evaluated?", "condition": "207-1=1"}, {"label": "Dynamic quantification range", "name": "134", "type": "select", "required": 0, "choice": [{"name": "134-1", "label": "Yes", "value": 0}, {"name": "134-2", "label": "No", "value": 1}], "description": "Was the dynamic range of the method evaluated?", "condition": "207-1=1"}, {"label": "Limit of quantitation (LOQ)/Limit of detection (LOD)", "name": "137", "type": "select", "required": 0, "choice": [{"name": "137-1", "label": "Yes", "value": 0}, {"name": "137-2", "label": "No", "value": 1}], "description": "Was LOD/LOQ of the method evaluated?", "condition": "207-1=1"}, {"label": "Precison", "name": "136", "type": "select", "required": 0, "choice": [{"name": "136-1", "label": "Yes", "value": 0}, {"name": "136-2", "label": "No", "value": 1}], "description": "Was precision of the method evaluated?", "condition": "207-1=1"}, {"label": "Accuracy", "name": "135", "type": "select", "required": 0, "choice": [{"name": "135-1", "label": "Yes", "value": 0}, {"name": "135-2", "label": "No", "value": 1}], "description": "Was accuracy of the method evaluated?", "condition": "207-1=1"}, {"label": "Guidelines followed", "name": "138", "type": "select", "required": 0, "choice": [{"name": "138-1", "label": "FDA", "value": 0}, {"name": "138-2", "label": "EMA", "value": 0}, {"name": "138-4", "label": "None", "value": 1}, {"name": "138-3", "label": "Other", "value": 0}], "description": "Was a guideline followed for method validation?", "condition": "207-1=1"}, {"label": "Other guidelines followed", "name": "139", "type": "text", "required": 1, "value": "", "description": "Which other guidelines were followed?", "condition": "138-3=1"}]}, {"title": "Reporting", "content": [{"label": "Are reported raw data uploaded into repository?", "name": "141", "type": "select", "required": 0, "choice": [{"name": "141-1", "label": "Yes", "value": 0}, {"name": "141-2", "label": "No", "value": 1}, {"name": "141-3", "label": "Available on request", "value": 0}], "description": "Were reported data uploaded into repository or included as supplementary data?"}, {"label": "Are metadata available?", "name": "142", "type": "select", "required": 0, "choice": [{"name": "142-1", "label": "Yes", "value": 0}, {"name": "142-2", "label": "No", "value": 1}, {"name": "142-3", "label": "Available on request", "value": 0}], "description": "", "condition": "141-1=1"}, {"label": "Summary data", "name": "144", "type": "multiple", "required": 0, "choice": [{"name": "144-1", "label": "Quantification data", "value": 0}, {"name": "144-2", "label": "Identification data", "value": 0}, {"name": "144-3", "label": "Quantification and identification data", "value": 0}], "description": "Are summary, i.e. processed final data available?", "condition": "141-1=1"}, {"label": "Raw data upload", "name": "143", "type": "select", "required": 0, "choice": [{"name": "143-1", "label": "Yes", "value": 0}, {"name": "143-2", "label": "No", "value": 1}, {"name": "143-3", "label": "Available on request", "value": 0}], "description": "Are raw data, i.e. unprocessed data including peak m/z, intensities/areas, RT (when applicable) available?"}]}], "current_page": 0, "creation_date": "", "version": ""}
